{"ast":null,"code":"import _inherits from \"C:/Users/bhavi/OneDrive/Desktop/nec-upt-master/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/bhavi/OneDrive/Desktop/nec-upt-master/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/Users/bhavi/OneDrive/Desktop/nec-upt-master/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/bhavi/OneDrive/Desktop/nec-upt-master/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Injectable, ɵɵdefineInjectable, forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MiniStore, MiniState } from 'ngx-bootstrap/mini-ngrx';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction TimepickerComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r19 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵelementStart(1, \"a\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_td_7_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var ctx_r18 = ɵngcc0.ɵɵnextContext();\n      return ctx_r18.changeMinutes(ctx_r18.minuteStep);\n    });\n    ɵngcc0.ɵɵelement(2, \"span\", 2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"disabled\", !ctx_r1.canIncrementMinutes || !ctx_r1.isEditable);\n  }\n}\n\nfunction TimepickerComponent_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\xA0\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r21 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵelementStart(1, \"a\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_td_9_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r21);\n      var ctx_r20 = ɵngcc0.ɵɵnextContext();\n      return ctx_r20.changeSeconds(ctx_r20.secondsStep);\n    });\n    ɵngcc0.ɵɵelement(2, \"span\", 2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"disabled\", !ctx_r3.canIncrementSeconds || !ctx_r3.isEditable);\n  }\n}\n\nfunction TimepickerComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\");\n  }\n}\n\nfunction TimepickerComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\xA0:\\xA0\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r23 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 5);\n    ɵngcc0.ɵɵlistener(\"wheel\", function TimepickerComponent_td_16_Template_input_wheel_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r22 = ɵngcc0.ɵɵnextContext();\n      ctx_r22.prevDef($event);\n      return ctx_r22.changeMinutes(ctx_r22.minuteStep * ctx_r22.wheelSign($event), \"wheel\");\n    })(\"keydown.ArrowUp\", function TimepickerComponent_td_16_Template_input_keydown_ArrowUp_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r24 = ɵngcc0.ɵɵnextContext();\n      return ctx_r24.changeMinutes(ctx_r24.minuteStep, \"key\");\n    })(\"keydown.ArrowDown\", function TimepickerComponent_td_16_Template_input_keydown_ArrowDown_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r25 = ɵngcc0.ɵɵnextContext();\n      return ctx_r25.changeMinutes(-ctx_r25.minuteStep, \"key\");\n    })(\"change\", function TimepickerComponent_td_16_Template_input_change_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r26 = ɵngcc0.ɵɵnextContext();\n      return ctx_r26.updateMinutes($event.target.value);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"has-error\", ctx_r7.invalidMinutes);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx_r7.invalidMinutes);\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r7.minutesPlaceholder)(\"readonly\", ctx_r7.readonlyInput)(\"disabled\", ctx_r7.disabled)(\"value\", ctx_r7.minutes);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r7.labelMinutes);\n  }\n}\n\nfunction TimepickerComponent_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\xA0:\\xA0\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r28 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 5);\n    ɵngcc0.ɵɵlistener(\"wheel\", function TimepickerComponent_td_18_Template_input_wheel_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      var ctx_r27 = ɵngcc0.ɵɵnextContext();\n      ctx_r27.prevDef($event);\n      return ctx_r27.changeSeconds(ctx_r27.secondsStep * ctx_r27.wheelSign($event), \"wheel\");\n    })(\"keydown.ArrowUp\", function TimepickerComponent_td_18_Template_input_keydown_ArrowUp_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      var ctx_r29 = ɵngcc0.ɵɵnextContext();\n      return ctx_r29.changeSeconds(ctx_r29.secondsStep, \"key\");\n    })(\"keydown.ArrowDown\", function TimepickerComponent_td_18_Template_input_keydown_ArrowDown_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      var ctx_r30 = ɵngcc0.ɵɵnextContext();\n      return ctx_r30.changeSeconds(-ctx_r30.secondsStep, \"key\");\n    })(\"change\", function TimepickerComponent_td_18_Template_input_change_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      var ctx_r31 = ɵngcc0.ɵɵnextContext();\n      return ctx_r31.updateSeconds($event.target.value);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"has-error\", ctx_r9.invalidSeconds);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx_r9.invalidSeconds);\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r9.secondsPlaceholder)(\"readonly\", ctx_r9.readonlyInput)(\"disabled\", ctx_r9.disabled)(\"value\", ctx_r9.seconds);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r9.labelSeconds);\n  }\n}\n\nfunction TimepickerComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_20_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r33 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵelementStart(1, \"button\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_td_20_Template_button_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r33);\n      var ctx_r32 = ɵngcc0.ɵɵnextContext();\n      return ctx_r32.toggleMeridian();\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r11 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"disabled\", !ctx_r11.isEditable || !ctx_r11.canToggleMeridian);\n    ɵngcc0.ɵɵproperty(\"disabled\", !ctx_r11.isEditable || !ctx_r11.canToggleMeridian);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r11.meridian, \" \");\n  }\n}\n\nfunction TimepickerComponent_td_25_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_26_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r35 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵelementStart(1, \"a\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_td_26_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r35);\n      var ctx_r34 = ɵngcc0.ɵɵnextContext();\n      return ctx_r34.changeMinutes(-ctx_r34.minuteStep);\n    });\n    ɵngcc0.ɵɵelement(2, \"span\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r13 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"disabled\", !ctx_r13.canDecrementMinutes || !ctx_r13.isEditable);\n  }\n}\n\nfunction TimepickerComponent_td_27_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\xA0\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_28_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r37 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵelementStart(1, \"a\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_td_28_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r37);\n      var ctx_r36 = ɵngcc0.ɵɵnextContext();\n      return ctx_r36.changeSeconds(-ctx_r36.secondsStep);\n    });\n    ɵngcc0.ɵɵelement(2, \"span\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r15 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"disabled\", !ctx_r15.canDecrementSeconds || !ctx_r15.isEditable);\n  }\n}\n\nfunction TimepickerComponent_td_29_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_30_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\");\n  }\n}\n\nvar TimepickerActions = /*#__PURE__*/function () {\n  function TimepickerActions() {\n    _classCallCheck(this, TimepickerActions);\n  }\n\n  _createClass(TimepickerActions, [{\n    key: \"writeValue\",\n    value:\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function writeValue(value) {\n      return {\n        type: TimepickerActions.WRITE_VALUE,\n        payload: value\n      };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"changeHours\",\n    value: function changeHours(event) {\n      return {\n        type: TimepickerActions.CHANGE_HOURS,\n        payload: event\n      };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"changeMinutes\",\n    value: function changeMinutes(event) {\n      return {\n        type: TimepickerActions.CHANGE_MINUTES,\n        payload: event\n      };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"changeSeconds\",\n    value: function changeSeconds(event) {\n      return {\n        type: TimepickerActions.CHANGE_SECONDS,\n        payload: event\n      };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"setTime\",\n    value: function setTime(value) {\n      return {\n        type: TimepickerActions.SET_TIME_UNIT,\n        payload: value\n      };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateControls\",\n    value: function updateControls(value) {\n      return {\n        type: TimepickerActions.UPDATE_CONTROLS,\n        payload: value\n      };\n    }\n  }]);\n\n  return TimepickerActions;\n}();\n\nTimepickerActions.ɵfac = function TimepickerActions_Factory(t) {\n  return new (t || TimepickerActions)();\n};\n\nTimepickerActions.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: TimepickerActions,\n  factory: TimepickerActions.ɵfac\n});\nTimepickerActions.WRITE_VALUE = '[timepicker] write value from ng model';\nTimepickerActions.CHANGE_HOURS = '[timepicker] change hours';\nTimepickerActions.CHANGE_MINUTES = '[timepicker] change minutes';\nTimepickerActions.CHANGE_SECONDS = '[timepicker] change seconds';\nTimepickerActions.SET_TIME_UNIT = '[timepicker] set time unit';\nTimepickerActions.UPDATE_CONTROLS = '[timepicker] update controls';\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TimepickerActions, [{\n    type: Injectable\n  }], null, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  TimepickerActions.WRITE_VALUE;\n  /** @type {?} */\n\n  TimepickerActions.CHANGE_HOURS;\n  /** @type {?} */\n\n  TimepickerActions.CHANGE_MINUTES;\n  /** @type {?} */\n\n  TimepickerActions.CHANGE_SECONDS;\n  /** @type {?} */\n\n  TimepickerActions.SET_TIME_UNIT;\n  /** @type {?} */\n\n  TimepickerActions.UPDATE_CONTROLS;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar dex = 10;\n/** @type {?} */\n\nvar hoursPerDay = 24;\n/** @type {?} */\n\nvar hoursPerDayHalf = 12;\n/** @type {?} */\n\nvar minutesPerHour = 60;\n/** @type {?} */\n\nvar secondsPerMinute = 60;\n/**\n * @param {?=} value\n * @return {?}\n */\n\nfunction isValidDate(value) {\n  if (!value) {\n    return false;\n  }\n\n  if (value instanceof Date && isNaN(value.getHours())) {\n    return false;\n  }\n\n  if (typeof value === 'string') {\n    return isValidDate(new Date(value));\n  }\n\n  return true;\n}\n/**\n * @param {?} controls\n * @param {?} newDate\n * @return {?}\n */\n\n\nfunction isValidLimit(controls, newDate) {\n  if (controls.min && newDate < controls.min) {\n    return false;\n  }\n\n  if (controls.max && newDate > controls.max) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction toNumber(value) {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return parseInt(value, dex);\n}\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction isNumber(value) {\n  return !isNaN(toNumber(value));\n}\n/**\n * @param {?} value\n * @param {?=} isPM\n * @return {?}\n */\n\n\nfunction parseHours(value) {\n  var isPM = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  /** @type {?} */\n  var hour = toNumber(value);\n\n  if (isNaN(hour) || hour < 0 || hour > (isPM ? hoursPerDayHalf : hoursPerDay)) {\n    return NaN;\n  }\n\n  return hour;\n}\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction parseMinutes(value) {\n  /** @type {?} */\n  var minute = toNumber(value);\n\n  if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n    return NaN;\n  }\n\n  return minute;\n}\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction parseSeconds(value) {\n  /** @type {?} */\n  var seconds = toNumber(value);\n\n  if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n    return NaN;\n  }\n\n  return seconds;\n}\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction parseTime(value) {\n  if (typeof value === 'string') {\n    return new Date(value);\n  }\n\n  return value;\n}\n/**\n * @param {?} value\n * @param {?} diff\n * @return {?}\n */\n\n\nfunction changeTime(value, diff) {\n  if (!value) {\n    return changeTime(createDate(new Date(), 0, 0, 0), diff);\n  }\n  /** @type {?} */\n\n\n  var hour = value.getHours();\n  /** @type {?} */\n\n  var minutes = value.getMinutes();\n  /** @type {?} */\n\n  var seconds = value.getSeconds();\n\n  if (diff.hour) {\n    hour = hour + toNumber(diff.hour);\n  }\n\n  if (diff.minute) {\n    minutes = minutes + toNumber(diff.minute);\n  }\n\n  if (diff.seconds) {\n    seconds = seconds + toNumber(diff.seconds);\n  }\n\n  return createDate(value, hour, minutes, seconds);\n}\n/**\n * @param {?} value\n * @param {?} opts\n * @return {?}\n */\n\n\nfunction setTime(value, opts) {\n  /** @type {?} */\n  var hour = parseHours(opts.hour);\n  /** @type {?} */\n\n  var minute = parseMinutes(opts.minute);\n  /** @type {?} */\n\n  var seconds = parseSeconds(opts.seconds) || 0;\n\n  if (opts.isPM && hour !== 12) {\n    hour += hoursPerDayHalf;\n  }\n\n  if (!value) {\n    if (!isNaN(hour) && !isNaN(minute)) {\n      return createDate(new Date(), hour, minute, seconds);\n    }\n\n    return value;\n  }\n\n  if (isNaN(hour) || isNaN(minute)) {\n    return value;\n  }\n\n  return createDate(value, hour, minute, seconds);\n}\n/**\n * @param {?} value\n * @param {?} hours\n * @param {?} minutes\n * @param {?} seconds\n * @return {?}\n */\n\n\nfunction createDate(value, hours, minutes, seconds) {\n  /** @type {?} */\n  var newValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), hours, minutes, seconds, value.getMilliseconds()); // #3139 ensure date part remains unchanged\n\n  newValue.setFullYear(value.getFullYear());\n  newValue.setMonth(value.getMonth());\n  newValue.setDate(value.getDate());\n  return newValue;\n}\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction padNumber(value) {\n  /** @type {?} */\n  var _value = value.toString();\n\n  if (_value.length > 1) {\n    return _value;\n  }\n\n  return \"0\".concat(_value);\n}\n/**\n * @param {?} hours\n * @param {?} isPM\n * @return {?}\n */\n\n\nfunction isHourInputValid(hours, isPM) {\n  return !isNaN(parseHours(hours, isPM));\n}\n/**\n * @param {?} minutes\n * @return {?}\n */\n\n\nfunction isMinuteInputValid(minutes) {\n  return !isNaN(parseMinutes(minutes));\n}\n/**\n * @param {?} seconds\n * @return {?}\n */\n\n\nfunction isSecondInputValid(seconds) {\n  return !isNaN(parseSeconds(seconds));\n}\n/**\n * @param {?} diff\n * @param {?} max\n * @param {?} min\n * @return {?}\n */\n\n\nfunction isInputLimitValid(diff, max, min) {\n  /** @type {?} */\n  var newDate = setTime(new Date(), diff);\n\n  if (max && newDate > max) {\n    return false;\n  }\n\n  if (min && newDate < min) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * @param {?} hours\n * @param {?=} minutes\n * @param {?=} seconds\n * @param {?=} isPM\n * @return {?}\n */\n\n\nfunction isInputValid(hours) {\n  var minutes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';\n  var seconds = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '0';\n  var isPM = arguments.length > 3 ? arguments[3] : undefined;\n  return isHourInputValid(hours, isPM) && isMinuteInputValid(minutes) && isSecondInputValid(seconds);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} state\n * @param {?=} event\n * @return {?}\n */\n\n\nfunction canChangeValue(state, event) {\n  if (state.readonlyInput || state.disabled) {\n    return false;\n  }\n\n  if (event) {\n    if (event.source === 'wheel' && !state.mousewheel) {\n      return false;\n    }\n\n    if (event.source === 'key' && !state.arrowkeys) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {?} event\n * @param {?} controls\n * @return {?}\n */\n\n\nfunction canChangeHours(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementHours) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementHours) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * @param {?} event\n * @param {?} controls\n * @return {?}\n */\n\n\nfunction canChangeMinutes(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementMinutes) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementMinutes) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * @param {?} event\n * @param {?} controls\n * @return {?}\n */\n\n\nfunction canChangeSeconds(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementSeconds) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementSeconds) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * @param {?} state\n * @return {?}\n */\n\n\nfunction getControlsValue(state) {\n  var hourStep = state.hourStep,\n      minuteStep = state.minuteStep,\n      secondsStep = state.secondsStep,\n      readonlyInput = state.readonlyInput,\n      disabled = state.disabled,\n      mousewheel = state.mousewheel,\n      arrowkeys = state.arrowkeys,\n      showSpinners = state.showSpinners,\n      showMeridian = state.showMeridian,\n      showSeconds = state.showSeconds,\n      meridians = state.meridians,\n      min = state.min,\n      max = state.max;\n  return {\n    hourStep: hourStep,\n    minuteStep: minuteStep,\n    secondsStep: secondsStep,\n    readonlyInput: readonlyInput,\n    disabled: disabled,\n    mousewheel: mousewheel,\n    arrowkeys: arrowkeys,\n    showSpinners: showSpinners,\n    showMeridian: showMeridian,\n    showSeconds: showSeconds,\n    meridians: meridians,\n    min: min,\n    max: max\n  };\n}\n/**\n * @param {?} value\n * @param {?} state\n * @return {?}\n */\n\n\nfunction timepickerControls(value, state) {\n  /** @type {?} */\n  var hoursPerDay = 24;\n  /** @type {?} */\n\n  var hoursPerDayHalf = 12;\n  var min = state.min,\n      max = state.max,\n      hourStep = state.hourStep,\n      minuteStep = state.minuteStep,\n      secondsStep = state.secondsStep,\n      showSeconds = state.showSeconds;\n  /** @type {?} */\n\n  var res = {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n    canToggleMeridian: true\n  };\n\n  if (!value) {\n    return res;\n  } // compare dates\n\n\n  if (max) {\n    /** @type {?} */\n    var _newHour = changeTime(value, {\n      hour: hourStep\n    });\n\n    res.canIncrementHours = max > _newHour && value.getHours() + hourStep < hoursPerDay;\n\n    if (!res.canIncrementHours) {\n      /** @type {?} */\n      var _newMinutes = changeTime(value, {\n        minute: minuteStep\n      });\n\n      res.canIncrementMinutes = showSeconds ? max > _newMinutes : max >= _newMinutes;\n    }\n\n    if (!res.canIncrementMinutes) {\n      /** @type {?} */\n      var _newSeconds = changeTime(value, {\n        seconds: secondsStep\n      });\n\n      res.canIncrementSeconds = max >= _newSeconds;\n    }\n\n    if (value.getHours() < hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, {\n        hour: hoursPerDayHalf\n      }) < max;\n    }\n  }\n\n  if (min) {\n    /** @type {?} */\n    var _newHour2 = changeTime(value, {\n      hour: -hourStep\n    });\n\n    res.canDecrementHours = min < _newHour2;\n\n    if (!res.canDecrementHours) {\n      /** @type {?} */\n      var _newMinutes2 = changeTime(value, {\n        minute: -minuteStep\n      });\n\n      res.canDecrementMinutes = showSeconds ? min < _newMinutes2 : min <= _newMinutes2;\n    }\n\n    if (!res.canDecrementMinutes) {\n      /** @type {?} */\n      var _newSeconds2 = changeTime(value, {\n        seconds: -secondsStep\n      });\n\n      res.canDecrementSeconds = min <= _newSeconds2;\n    }\n\n    if (value.getHours() >= hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, {\n        hour: -hoursPerDayHalf\n      }) > min;\n    }\n  }\n\n  return res;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Provides default configuration values for timepicker\n */\n\n\nvar TimepickerConfig = function TimepickerConfig() {\n  _classCallCheck(this, TimepickerConfig);\n\n  /**\n   * hours change step\n   */\n  this.hourStep = 1;\n  /**\n   * minutes change step\n   */\n\n  this.minuteStep = 5;\n  /**\n   * seconds changes step\n   */\n\n  this.secondsStep = 10;\n  /**\n   * if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM\n   */\n\n  this.showMeridian = true;\n  /**\n   * meridian labels based on locale\n   */\n\n  this.meridians = ['AM', 'PM'];\n  /**\n   * if true hours and minutes fields will be readonly\n   */\n\n  this.readonlyInput = false;\n  /**\n   * if true hours and minutes fields will be disabled\n   */\n\n  this.disabled = false;\n  /**\n   * if true scroll inside hours and minutes inputs will change time\n   */\n\n  this.mousewheel = true;\n  /**\n   * if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard\n   */\n\n  this.arrowkeys = true;\n  /**\n   * if true spinner arrows above and below the inputs will be shown\n   */\n\n  this.showSpinners = true;\n  /**\n   * show seconds in timepicker\n   */\n\n  this.showSeconds = false;\n  /**\n   * show minutes in timepicker\n   */\n\n  this.showMinutes = true;\n  /**\n   * placeholder for hours field in timepicker\n   */\n\n  this.hoursPlaceholder = 'HH';\n  /**\n   * placeholder for minutes field in timepicker\n   */\n\n  this.minutesPlaceholder = 'MM';\n  /**\n   * placeholder for seconds field in timepicker\n   */\n\n  this.secondsPlaceholder = 'SS';\n  /**\n   * hours aria label\n   */\n\n  this.ariaLabelHours = 'hours';\n  /**\n   * minutes aria label\n   */\n\n  this.ariaLabelMinutes = 'minutes';\n  /**\n   * seconds aria label\n   */\n\n  this.ariaLabelSeconds = 'seconds';\n};\n\nTimepickerConfig.ɵfac = function TimepickerConfig_Factory(t) {\n  return new (t || TimepickerConfig)();\n};\n/** @nocollapse */\n\n\nTimepickerConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function TimepickerConfig_Factory() {\n    return new TimepickerConfig();\n  },\n  token: TimepickerConfig,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TimepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * hours change step\n   * @type {?}\n   */\n  TimepickerConfig.prototype.hourStep;\n  /**\n   * minutes change step\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.minuteStep;\n  /**\n   * seconds changes step\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.secondsStep;\n  /**\n   * if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.showMeridian;\n  /**\n   * meridian labels based on locale\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.meridians;\n  /**\n   * if true hours and minutes fields will be readonly\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.readonlyInput;\n  /**\n   * if true hours and minutes fields will be disabled\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.disabled;\n  /**\n   * if true scroll inside hours and minutes inputs will change time\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.mousewheel;\n  /**\n   * if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.arrowkeys;\n  /**\n   * if true spinner arrows above and below the inputs will be shown\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.showSpinners;\n  /**\n   * show seconds in timepicker\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.showSeconds;\n  /**\n   * show minutes in timepicker\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.showMinutes;\n  /**\n   * minimum time user can select\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.min;\n  /**\n   * maximum time user can select\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.max;\n  /**\n   * placeholder for hours field in timepicker\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.hoursPlaceholder;\n  /**\n   * placeholder for minutes field in timepicker\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.minutesPlaceholder;\n  /**\n   * placeholder for seconds field in timepicker\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.secondsPlaceholder;\n  /**\n   * hours aria label\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.ariaLabelHours;\n  /**\n   * minutes aria label\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.ariaLabelMinutes;\n  /**\n   * seconds aria label\n   * @type {?}\n   */\n\n  TimepickerConfig.prototype.ariaLabelSeconds;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar TimepickerState = function TimepickerState() {\n  _classCallCheck(this, TimepickerState);\n};\n\nif (false) {\n  /** @type {?} */\n  TimepickerState.prototype.value;\n  /** @type {?} */\n\n  TimepickerState.prototype.config;\n  /** @type {?} */\n\n  TimepickerState.prototype.controls;\n}\n/** @type {?} */\n\n\nvar initialState = {\n  value: null,\n  config: new TimepickerConfig(),\n  controls: {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n    canToggleMeridian: true\n  }\n}; // tslint:disable-next-line:cyclomatic-complexity\n\n/**\n * @param {?=} state\n * @param {?=} action\n * @return {?}\n */\n\nfunction timepickerReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TimepickerActions.WRITE_VALUE:\n      {\n        return Object.assign({}, state, {\n          value: action.payload\n        });\n      }\n\n    case TimepickerActions.CHANGE_HOURS:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeHours(action.payload, state.controls)) {\n          return state;\n        }\n        /** @type {?} */\n\n\n        var _newTime = changeTime(state.value, {\n          hour: action.payload.step\n        });\n\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n        }\n\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n\n    case TimepickerActions.CHANGE_MINUTES:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeMinutes(action.payload, state.controls)) {\n          return state;\n        }\n        /** @type {?} */\n\n\n        var _newTime2 = changeTime(state.value, {\n          minute: action.payload.step\n        });\n\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime2)) {\n          return state;\n        }\n\n        return Object.assign({}, state, {\n          value: _newTime2\n        });\n      }\n\n    case TimepickerActions.CHANGE_SECONDS:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeSeconds(action.payload, state.controls)) {\n          return state;\n        }\n        /** @type {?} */\n\n\n        var _newTime3 = changeTime(state.value, {\n          seconds: action.payload.step\n        });\n\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime3)) {\n          return state;\n        }\n\n        return Object.assign({}, state, {\n          value: _newTime3\n        });\n      }\n\n    case TimepickerActions.SET_TIME_UNIT:\n      {\n        if (!canChangeValue(state.config)) {\n          return state;\n        }\n        /** @type {?} */\n\n\n        var _newTime4 = setTime(state.value, action.payload);\n\n        return Object.assign({}, state, {\n          value: _newTime4\n        });\n      }\n\n    case TimepickerActions.UPDATE_CONTROLS:\n      {\n        /** @type {?} */\n        var _newControlsState = timepickerControls(state.value, action.payload);\n        /** @type {?} */\n\n\n        var _newState = {\n          value: state.value,\n          config: action.payload,\n          controls: _newControlsState\n        };\n\n        if (state.config.showMeridian !== _newState.config.showMeridian) {\n          if (state.value) {\n            _newState.value = new Date(state.value);\n          }\n        }\n\n        return Object.assign({}, state, _newState);\n      }\n\n    default:\n      return state;\n  }\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar TimepickerStore = /*#__PURE__*/function (_MiniStore) {\n  _inherits(TimepickerStore, _MiniStore);\n\n  var _super = _createSuper(TimepickerStore);\n\n  function TimepickerStore() {\n    _classCallCheck(this, TimepickerStore);\n\n    /** @type {?} */\n    var _dispatcher = new BehaviorSubject({\n      type: '[mini-ngrx] dispatcher init'\n    });\n    /** @type {?} */\n\n\n    var state = new MiniState(initialState, _dispatcher, timepickerReducer);\n    return _super.call(this, _dispatcher, timepickerReducer, state);\n  }\n\n  return TimepickerStore;\n}(MiniStore);\n\nTimepickerStore.ɵfac = function TimepickerStore_Factory(t) {\n  return new (t || TimepickerStore)();\n};\n\nTimepickerStore.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: TimepickerStore,\n  factory: TimepickerStore.ɵfac\n});\n/** @nocollapse */\n\nTimepickerStore.ctorParameters = function () {\n  return [];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TimepickerStore, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar TIMEPICKER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(\n  /**\n  * @return {?}\n  */\n  function () {\n    return TimepickerComponent;\n  }),\n  multi: true\n};\n\nvar TimepickerComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} _config\n   * @param {?} _cd\n   * @param {?} _store\n   * @param {?} _timepickerActions\n   */\n  function TimepickerComponent(_config, _cd, _store, _timepickerActions) {\n    var _this = this;\n\n    _classCallCheck(this, TimepickerComponent);\n\n    this._cd = _cd;\n    this._store = _store;\n    this._timepickerActions = _timepickerActions;\n    /**\n     * emits true if value is a valid date\n     */\n\n    this.isValid = new EventEmitter(); // min\\max validation for input fields\n\n    this.invalidHours = false;\n    this.invalidMinutes = false;\n    this.invalidSeconds = false; // control value accessor methods\n    // tslint:disable-next-line:no-any\n\n    this.onChange = Function.prototype; // tslint:disable-next-line:no-any\n\n    this.onTouched = Function.prototype;\n    Object.assign(this, _config);\n    this.timepickerSub = _store.select(\n    /**\n    * @param {?} state\n    * @return {?}\n    */\n    function (state) {\n      return state.value;\n    }).subscribe(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    function (value) {\n      // update UI values if date changed\n      _this._renderTime(value);\n\n      _this.onChange(value);\n\n      _this._store.dispatch(_this._timepickerActions.updateControls(getControlsValue(_this)));\n    });\n\n    _store.select(\n    /**\n    * @param {?} state\n    * @return {?}\n    */\n    function (state) {\n      return state.controls;\n    }).subscribe(\n    /**\n    * @param {?} controlsState\n    * @return {?}\n    */\n    function (controlsState) {\n      _this.isValid.emit(isInputValid(_this.hours, _this.minutes, _this.seconds, _this.isPM()));\n\n      Object.assign(_this, controlsState);\n\n      _cd.markForCheck();\n    });\n  }\n  /**\n   * @deprecated - please use `isEditable` instead\n   * @return {?}\n   */\n\n\n  _createClass(TimepickerComponent, [{\n    key: \"isSpinnersVisible\",\n    get: function get() {\n      return this.showSpinners && !this.readonlyInput;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isEditable\",\n    get: function get() {\n      return !(this.readonlyInput || this.disabled);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"resetValidation\",\n    value: function resetValidation() {\n      this.invalidHours = false;\n      this.invalidMinutes = false;\n      this.invalidSeconds = false;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isPM\",\n    value: function isPM() {\n      return this.showMeridian && this.meridian === this.meridians[1];\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n\n  }, {\n    key: \"prevDef\",\n    value: function prevDef($event) {\n      $event.preventDefault();\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n\n  }, {\n    key: \"wheelSign\",\n    value: function wheelSign($event) {\n      return Math.sign($event.deltaY) * -1;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n    }\n    /**\n     * @param {?} step\n     * @param {?=} source\n     * @return {?}\n     */\n\n  }, {\n    key: \"changeHours\",\n    value: function changeHours(step) {\n      var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      this.resetValidation();\n\n      this._store.dispatch(this._timepickerActions.changeHours({\n        step: step,\n        source: source\n      }));\n    }\n    /**\n     * @param {?} step\n     * @param {?=} source\n     * @return {?}\n     */\n\n  }, {\n    key: \"changeMinutes\",\n    value: function changeMinutes(step) {\n      var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      this.resetValidation();\n\n      this._store.dispatch(this._timepickerActions.changeMinutes({\n        step: step,\n        source: source\n      }));\n    }\n    /**\n     * @param {?} step\n     * @param {?=} source\n     * @return {?}\n     */\n\n  }, {\n    key: \"changeSeconds\",\n    value: function changeSeconds(step) {\n      var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      this.resetValidation();\n\n      this._store.dispatch(this._timepickerActions.changeSeconds({\n        step: step,\n        source: source\n      }));\n    }\n    /**\n     * @param {?} hours\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateHours\",\n    value: function updateHours(hours) {\n      this.resetValidation();\n      this.hours = hours;\n      /** @type {?} */\n\n      var isValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n\n      if (!isValid) {\n        this.invalidHours = true;\n        this.isValid.emit(false);\n        this.onChange(null);\n        return;\n      }\n\n      this._updateTime();\n    }\n    /**\n     * @param {?} minutes\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateMinutes\",\n    value: function updateMinutes(minutes) {\n      this.resetValidation();\n      this.minutes = minutes;\n      /** @type {?} */\n\n      var isValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n\n      if (!isValid) {\n        this.invalidMinutes = true;\n        this.isValid.emit(false);\n        this.onChange(null);\n        return;\n      }\n\n      this._updateTime();\n    }\n    /**\n     * @param {?} seconds\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateSeconds\",\n    value: function updateSeconds(seconds) {\n      this.resetValidation();\n      this.seconds = seconds;\n      /** @type {?} */\n\n      var isValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n\n      if (!isValid) {\n        this.invalidSeconds = true;\n        this.isValid.emit(false);\n        this.onChange(null);\n        return;\n      }\n\n      this._updateTime();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isValidLimit\",\n    value: function isValidLimit() {\n      return isInputLimitValid({\n        hour: this.hours,\n        minute: this.minutes,\n        seconds: this.seconds,\n        isPM: this.isPM()\n      }, this.max, this.min);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_updateTime\",\n    value: function _updateTime() {\n      /** @type {?} */\n      var _seconds = this.showSeconds ? this.seconds : void 0;\n      /** @type {?} */\n\n\n      var _minutes = this.showMinutes ? this.minutes : void 0;\n\n      if (!isInputValid(this.hours, _minutes, _seconds, this.isPM())) {\n        this.isValid.emit(false);\n        this.onChange(null);\n        return;\n      }\n\n      this._store.dispatch(this._timepickerActions.setTime({\n        hour: this.hours,\n        minute: this.minutes,\n        seconds: this.seconds,\n        isPM: this.isPM()\n      }));\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"toggleMeridian\",\n    value: function toggleMeridian() {\n      if (!this.showMeridian || !this.isEditable) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var _hoursPerDayHalf = 12;\n\n      this._store.dispatch(this._timepickerActions.changeHours({\n        step: _hoursPerDayHalf,\n        source: ''\n      }));\n    }\n    /**\n     * Write a new value to the element.\n     * @param {?} obj\n     * @return {?}\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(obj) {\n      if (isValidDate(obj)) {\n        this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n      } else if (obj == null) {\n        this._store.dispatch(this._timepickerActions.writeValue(null));\n      }\n    }\n    /**\n     * Set the function to be called when the control receives a change event.\n     * @param {?} fn\n     * @return {?}\n     */\n    // tslint:disable-next-line:no-any\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    /**\n     * Set the function to be called when the control receives a touch event.\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\n     * This function is called when the control status changes to or from \"disabled\".\n     * Depending on the value, it will enable or disable the appropriate DOM element.\n     *\n     * @param {?} isDisabled\n     * @return {?}\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n\n      this._cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.timepickerSub.unsubscribe();\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"_renderTime\",\n    value: function _renderTime(value) {\n      if (!isValidDate(value)) {\n        this.hours = '';\n        this.minutes = '';\n        this.seconds = '';\n        this.meridian = this.meridians[0];\n        return;\n      }\n      /** @type {?} */\n\n\n      var _value = parseTime(value);\n      /** @type {?} */\n\n\n      var _hoursPerDayHalf = 12;\n      /** @type {?} */\n\n      var _hours = _value.getHours();\n\n      if (this.showMeridian) {\n        this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n        _hours = _hours % _hoursPerDayHalf; // should be 12 PM, not 00 PM\n\n        if (_hours === 0) {\n          _hours = _hoursPerDayHalf;\n        }\n      }\n\n      this.hours = padNumber(_hours);\n      this.minutes = padNumber(_value.getMinutes());\n      this.seconds = padNumber(_value.getUTCSeconds());\n    }\n  }]);\n\n  return TimepickerComponent;\n}();\n\nTimepickerComponent.ɵfac = function TimepickerComponent_Factory(t) {\n  return new (t || TimepickerComponent)(ɵngcc0.ɵɵdirectiveInject(TimepickerConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(TimepickerStore), ɵngcc0.ɵɵdirectiveInject(TimepickerActions));\n};\n\nTimepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TimepickerComponent,\n  selectors: [[\"timepicker\"]],\n  inputs: {\n    disabled: \"disabled\",\n    hourStep: \"hourStep\",\n    minuteStep: \"minuteStep\",\n    secondsStep: \"secondsStep\",\n    readonlyInput: \"readonlyInput\",\n    mousewheel: \"mousewheel\",\n    arrowkeys: \"arrowkeys\",\n    showSpinners: \"showSpinners\",\n    showMeridian: \"showMeridian\",\n    showMinutes: \"showMinutes\",\n    showSeconds: \"showSeconds\",\n    meridians: \"meridians\",\n    min: \"min\",\n    max: \"max\",\n    hoursPlaceholder: \"hoursPlaceholder\",\n    minutesPlaceholder: \"minutesPlaceholder\",\n    secondsPlaceholder: \"secondsPlaceholder\"\n  },\n  outputs: {\n    isValid: \"isValid\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 31,\n  vars: 33,\n  consts: [[1, \"text-center\", 3, \"hidden\"], [1, \"btn\", \"btn-link\", 3, \"click\"], [1, \"bs-chevron\", \"bs-chevron-up\"], [4, \"ngIf\"], [1, \"form-group\"], [\"type\", \"text\", \"maxlength\", \"2\", 1, \"form-control\", \"text-center\", \"bs-timepicker-field\", 3, \"placeholder\", \"readonly\", \"disabled\", \"value\", \"wheel\", \"keydown.ArrowUp\", \"keydown.ArrowDown\", \"change\"], [\"class\", \"form-group\", 3, \"has-error\", 4, \"ngIf\"], [1, \"bs-chevron\", \"bs-chevron-down\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", \"text-center\", 3, \"disabled\", \"click\"]],\n  template: function TimepickerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"table\");\n      ɵngcc0.ɵɵelementStart(1, \"tbody\");\n      ɵngcc0.ɵɵelementStart(2, \"tr\", 0);\n      ɵngcc0.ɵɵelementStart(3, \"td\");\n      ɵngcc0.ɵɵelementStart(4, \"a\", 1);\n      ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_Template_a_click_4_listener() {\n        return ctx.changeHours(ctx.hourStep);\n      });\n      ɵngcc0.ɵɵelement(5, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(6, TimepickerComponent_td_6_Template, 2, 0, \"td\", 3);\n      ɵngcc0.ɵɵtemplate(7, TimepickerComponent_td_7_Template, 3, 2, \"td\", 3);\n      ɵngcc0.ɵɵtemplate(8, TimepickerComponent_td_8_Template, 2, 0, \"td\", 3);\n      ɵngcc0.ɵɵtemplate(9, TimepickerComponent_td_9_Template, 3, 2, \"td\", 3);\n      ɵngcc0.ɵɵtemplate(10, TimepickerComponent_td_10_Template, 2, 0, \"td\", 3);\n      ɵngcc0.ɵɵtemplate(11, TimepickerComponent_td_11_Template, 1, 0, \"td\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(12, \"tr\");\n      ɵngcc0.ɵɵelementStart(13, \"td\", 4);\n      ɵngcc0.ɵɵelementStart(14, \"input\", 5);\n      ɵngcc0.ɵɵlistener(\"wheel\", function TimepickerComponent_Template_input_wheel_14_listener($event) {\n        ctx.prevDef($event);\n        return ctx.changeHours(ctx.hourStep * ctx.wheelSign($event), \"wheel\");\n      })(\"keydown.ArrowUp\", function TimepickerComponent_Template_input_keydown_ArrowUp_14_listener() {\n        return ctx.changeHours(ctx.hourStep, \"key\");\n      })(\"keydown.ArrowDown\", function TimepickerComponent_Template_input_keydown_ArrowDown_14_listener() {\n        return ctx.changeHours(-ctx.hourStep, \"key\");\n      })(\"change\", function TimepickerComponent_Template_input_change_14_listener($event) {\n        return ctx.updateHours($event.target.value);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(15, TimepickerComponent_td_15_Template, 2, 0, \"td\", 3);\n      ɵngcc0.ɵɵtemplate(16, TimepickerComponent_td_16_Template, 2, 9, \"td\", 6);\n      ɵngcc0.ɵɵtemplate(17, TimepickerComponent_td_17_Template, 2, 0, \"td\", 3);\n      ɵngcc0.ɵɵtemplate(18, TimepickerComponent_td_18_Template, 2, 9, \"td\", 6);\n      ɵngcc0.ɵɵtemplate(19, TimepickerComponent_td_19_Template, 2, 0, \"td\", 3);\n      ɵngcc0.ɵɵtemplate(20, TimepickerComponent_td_20_Template, 3, 4, \"td\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(21, \"tr\", 0);\n      ɵngcc0.ɵɵelementStart(22, \"td\");\n      ɵngcc0.ɵɵelementStart(23, \"a\", 1);\n      ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_Template_a_click_23_listener() {\n        return ctx.changeHours(-ctx.hourStep);\n      });\n      ɵngcc0.ɵɵelement(24, \"span\", 7);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(25, TimepickerComponent_td_25_Template, 2, 0, \"td\", 3);\n      ɵngcc0.ɵɵtemplate(26, TimepickerComponent_td_26_Template, 3, 2, \"td\", 3);\n      ɵngcc0.ɵɵtemplate(27, TimepickerComponent_td_27_Template, 2, 0, \"td\", 3);\n      ɵngcc0.ɵɵtemplate(28, TimepickerComponent_td_28_Template, 3, 2, \"td\", 3);\n      ɵngcc0.ɵɵtemplate(29, TimepickerComponent_td_29_Template, 2, 0, \"td\", 3);\n      ɵngcc0.ɵɵtemplate(30, TimepickerComponent_td_30_Template, 1, 0, \"td\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"hidden\", !ctx.showSpinners);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassProp(\"disabled\", !ctx.canIncrementHours || !ctx.isEditable);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassProp(\"has-error\", ctx.invalidHours);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx.invalidHours);\n      ɵngcc0.ɵɵproperty(\"placeholder\", ctx.hoursPlaceholder)(\"readonly\", ctx.readonlyInput)(\"disabled\", ctx.disabled)(\"value\", ctx.hours);\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.labelHours);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"hidden\", !ctx.showSpinners);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassProp(\"disabled\", !ctx.canDecrementHours || !ctx.isEditable);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  styles: [\"\\n    .bs-chevron {\\n      border-style: solid;\\n      display: block;\\n      width: 9px;\\n      height: 9px;\\n      position: relative;\\n      border-width: 3px 0px 0 3px;\\n    }\\n\\n    .bs-chevron-up {\\n      -webkit-transform: rotate(45deg);\\n      transform: rotate(45deg);\\n      top: 2px;\\n    }\\n\\n    .bs-chevron-down {\\n      -webkit-transform: rotate(-135deg);\\n      transform: rotate(-135deg);\\n      top: -2px;\\n    }\\n\\n    .bs-timepicker-field {\\n      width: 50px;\\n      padding: .375rem .55rem;\\n    }\\n  \"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nTimepickerComponent.ctorParameters = function () {\n  return [{\n    type: TimepickerConfig\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: TimepickerStore\n  }, {\n    type: TimepickerActions\n  }];\n};\n\nTimepickerComponent.propDecorators = {\n  hourStep: [{\n    type: Input\n  }],\n  minuteStep: [{\n    type: Input\n  }],\n  secondsStep: [{\n    type: Input\n  }],\n  readonlyInput: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  mousewheel: [{\n    type: Input\n  }],\n  arrowkeys: [{\n    type: Input\n  }],\n  showSpinners: [{\n    type: Input\n  }],\n  showMeridian: [{\n    type: Input\n  }],\n  showMinutes: [{\n    type: Input\n  }],\n  showSeconds: [{\n    type: Input\n  }],\n  meridians: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  hoursPlaceholder: [{\n    type: Input\n  }],\n  minutesPlaceholder: [{\n    type: Input\n  }],\n  secondsPlaceholder: [{\n    type: Input\n  }],\n  isValid: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TimepickerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'timepicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore],\n      template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target.value)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target.value)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target.value)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      styles: [\"\\n    .bs-chevron {\\n      border-style: solid;\\n      display: block;\\n      width: 9px;\\n      height: 9px;\\n      position: relative;\\n      border-width: 3px 0px 0 3px;\\n    }\\n\\n    .bs-chevron-up {\\n      -webkit-transform: rotate(45deg);\\n      transform: rotate(45deg);\\n      top: 2px;\\n    }\\n\\n    .bs-chevron-down {\\n      -webkit-transform: rotate(-135deg);\\n      transform: rotate(-135deg);\\n      top: -2px;\\n    }\\n\\n    .bs-timepicker-field {\\n      width: 50px;\\n      padding: .375rem .55rem;\\n    }\\n  \"]\n    }]\n  }], function () {\n    return [{\n      type: TimepickerConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: TimepickerStore\n    }, {\n      type: TimepickerActions\n    }];\n  }, {\n    isValid: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    hourStep: [{\n      type: Input\n    }],\n    minuteStep: [{\n      type: Input\n    }],\n    secondsStep: [{\n      type: Input\n    }],\n    readonlyInput: [{\n      type: Input\n    }],\n    mousewheel: [{\n      type: Input\n    }],\n    arrowkeys: [{\n      type: Input\n    }],\n    showSpinners: [{\n      type: Input\n    }],\n    showMeridian: [{\n      type: Input\n    }],\n    showMinutes: [{\n      type: Input\n    }],\n    showSeconds: [{\n      type: Input\n    }],\n    meridians: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    hoursPlaceholder: [{\n      type: Input\n    }],\n    minutesPlaceholder: [{\n      type: Input\n    }],\n    secondsPlaceholder: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * hours change step\n   * @type {?}\n   */\n  TimepickerComponent.prototype.hourStep;\n  /**\n   * minutes change step\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.minuteStep;\n  /**\n   * seconds change step\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.secondsStep;\n  /**\n   * if true hours and minutes fields will be readonly\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.readonlyInput;\n  /**\n   * if true hours and minutes fields will be disabled\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.disabled;\n  /**\n   * if true scroll inside hours and minutes inputs will change time\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.mousewheel;\n  /**\n   * if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.arrowkeys;\n  /**\n   * if true spinner arrows above and below the inputs will be shown\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.showSpinners;\n  /**\n   * if true meridian button will be shown\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.showMeridian;\n  /**\n   * show minutes in timepicker\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.showMinutes;\n  /**\n   * show seconds in timepicker\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.showSeconds;\n  /**\n   * meridian labels based on locale\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.meridians;\n  /**\n   * minimum time user can select\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.min;\n  /**\n   * maximum time user can select\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.max;\n  /**\n   * placeholder for hours field in timepicker\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.hoursPlaceholder;\n  /**\n   * placeholder for minutes field in timepicker\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.minutesPlaceholder;\n  /**\n   * placeholder for seconds field in timepicker\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.secondsPlaceholder;\n  /**\n   * emits true if value is a valid date\n   * @type {?}\n   */\n\n  TimepickerComponent.prototype.isValid;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.hours;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.minutes;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.seconds;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.meridian;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.invalidHours;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.invalidMinutes;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.invalidSeconds;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.labelHours;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.labelMinutes;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.labelSeconds;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.canIncrementHours;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.canIncrementMinutes;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.canIncrementSeconds;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.canDecrementHours;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.canDecrementMinutes;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.canDecrementSeconds;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.canToggleMeridian;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.onChange;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.onTouched;\n  /** @type {?} */\n\n  TimepickerComponent.prototype.timepickerSub;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TimepickerComponent.prototype._cd;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TimepickerComponent.prototype._store;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TimepickerComponent.prototype._timepickerActions;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar TimepickerModule = /*#__PURE__*/function () {\n  function TimepickerModule() {\n    _classCallCheck(this, TimepickerModule);\n  }\n\n  _createClass(TimepickerModule, null, [{\n    key: \"forRoot\",\n    value:\n    /**\n     * @return {?}\n     */\n    function forRoot() {\n      return {\n        ngModule: TimepickerModule,\n        providers: [TimepickerActions, TimepickerStore]\n      };\n    }\n  }]);\n\n  return TimepickerModule;\n}();\n\nTimepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: TimepickerModule\n});\nTimepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function TimepickerModule_Factory(t) {\n    return new (t || TimepickerModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TimepickerModule, {\n    declarations: function declarations() {\n      return [TimepickerComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [TimepickerComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TimepickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [TimepickerComponent],\n      exports: [TimepickerComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { TimepickerActions, TimepickerComponent, TimepickerConfig, TimepickerModule, TimepickerStore, TIMEPICKER_CONTROL_VALUE_ACCESSOR as ɵa };","map":{"version":3,"sources":["ngx-bootstrap/timepicker/reducer/timepicker.actions.ts","ngx-bootstrap/timepicker/timepicker.utils.ts","ngx-bootstrap/timepicker/timepicker-controls.util.ts","ngx-bootstrap/timepicker/timepicker.config.ts","ngx-bootstrap/timepicker/reducer/timepicker.reducer.ts","ngx-bootstrap/timepicker/reducer/timepicker.store.ts","ngx-bootstrap/timepicker/timepicker.component.ts","ngx-bootstrap/timepicker/timepicker.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Action } from 'ngx-bootstrap/mini-ngrx';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  Time\n} from '../timepicker.models';\n\n@Injectable()\nexport class TimepickerActions {\n  static readonly WRITE_VALUE = '[timepicker] write value from ng model';\n  static readonly CHANGE_HOURS = '[timepicker] change hours';\n  static readonly CHANGE_MINUTES = '[timepicker] change minutes';\n  static readonly CHANGE_SECONDS = '[timepicker] change seconds';\n  static readonly SET_TIME_UNIT = '[timepicker] set time unit';\n  static readonly UPDATE_CONTROLS = '[timepicker] update controls';\n\n  writeValue(value: Date | string) {\n    return {\n      type: TimepickerActions.WRITE_VALUE,\n      payload: value\n    };\n  }\n\n  changeHours(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_HOURS,\n      payload: event\n    };\n  }\n\n  changeMinutes(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_MINUTES,\n      payload: event\n    };\n  }\n\n  changeSeconds(event: TimeChangeEvent): Action {\n    return {\n      type: TimepickerActions.CHANGE_SECONDS,\n      payload: event\n    };\n  }\n\n  setTime(value: Time): Action {\n    return {\n      type: TimepickerActions.SET_TIME_UNIT,\n      payload: value\n    };\n  }\n\n  updateControls(value: TimepickerComponentState): Action {\n    return {\n      type: TimepickerActions.UPDATE_CONTROLS,\n      payload: value\n    };\n  }\n}\n","import { Time, TimepickerComponentState } from './timepicker.models';\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\n\nexport function isValidDate(value?: string | Date): boolean {\n  if (!value) {\n    return false;\n  }\n\n  if (value instanceof Date && isNaN(value.getHours())) {\n    return false;\n  }\n\n  if (typeof value === 'string') {\n    return isValidDate(new Date(value));\n  }\n\n  return true;\n}\n\nexport function isValidLimit(controls: TimepickerComponentState, newDate: Date): boolean {\n  if (controls.min && newDate < controls.min) {\n    return false;\n  }\n\n  if (controls.max && newDate > controls.max) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function toNumber(value: string | number): number {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return parseInt(value, dex);\n}\n\nexport function isNumber(value: string | number): value is number {\n  return !isNaN(toNumber(value));\n}\n\nexport function parseHours(\n  value: string | number,\n  isPM = false\n): number {\n  const hour = toNumber(value);\n  if (\n    isNaN(hour) ||\n    hour < 0 ||\n    hour > (isPM ? hoursPerDayHalf : hoursPerDay)\n  ) {\n    return NaN;\n  }\n\n  return hour;\n}\n\nexport function parseMinutes(value: string | number): number {\n  const minute = toNumber(value);\n  if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n    return NaN;\n  }\n\n  return minute;\n}\n\nexport function parseSeconds(value: string | number): number {\n  const seconds = toNumber(value);\n  if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n    return NaN;\n  }\n\n  return seconds;\n}\n\nexport function parseTime(value: string | Date): Date {\n  if (typeof value === 'string') {\n    return new Date(value);\n  }\n\n  return value;\n}\n\nexport function changeTime(value: Date, diff: Time): Date {\n  if (!value) {\n    return changeTime(createDate(new Date(), 0, 0, 0), diff);\n  }\n\n  let hour = value.getHours();\n  let minutes = value.getMinutes();\n  let seconds = value.getSeconds();\n\n  if (diff.hour) {\n    hour = hour + toNumber(diff.hour);\n  }\n\n  if (diff.minute) {\n    minutes = minutes + toNumber(diff.minute);\n  }\n\n  if (diff.seconds) {\n    seconds = seconds + toNumber(diff.seconds);\n  }\n\n  return createDate(value, hour, minutes, seconds);\n}\n\nexport function setTime(value: Date, opts: Time): Date {\n  let hour = parseHours(opts.hour);\n  const minute = parseMinutes(opts.minute);\n  const seconds = parseSeconds(opts.seconds) || 0;\n\n  if (opts.isPM && hour !== 12) {\n    hour += hoursPerDayHalf;\n  }\n\n  if (!value) {\n    if (!isNaN(hour) && !isNaN(minute)) {\n      return createDate(new Date(), hour, minute, seconds);\n    }\n\n    return value;\n  }\n\n  if (isNaN(hour) || isNaN(minute)) {\n    return value;\n  }\n\n  return createDate(value, hour, minute, seconds);\n}\n\nexport function createDate(\n  value: Date,\n  hours: number,\n  minutes: number,\n  seconds: number\n): Date {\n  const newValue = new Date(\n    value.getFullYear(),\n    value.getMonth(),\n    value.getDate(),\n    hours,\n    minutes,\n    seconds,\n    value.getMilliseconds()\n  );\n  // #3139 ensure date part remains unchanged\n  newValue.setFullYear(value.getFullYear());\n  newValue.setMonth(value.getMonth());\n  newValue.setDate(value.getDate());\n\n  return newValue;\n}\n\nexport function padNumber(value: number): string {\n  const _value = value.toString();\n  if (_value.length > 1) {\n    return _value;\n  }\n\n  return `0${_value}`;\n}\n\nexport function isHourInputValid(hours: string, isPM: boolean): boolean {\n  return !isNaN(parseHours(hours, isPM));\n}\n\nexport function isMinuteInputValid(minutes: string): boolean {\n  return !isNaN(parseMinutes(minutes));\n}\n\nexport function isSecondInputValid(seconds: string): boolean {\n  return !isNaN(parseSeconds(seconds));\n}\n\nexport function isInputLimitValid(diff: Time, max: Date, min: Date): boolean {\n  const newDate = setTime(new Date(), diff);\n\n  if (max && newDate > max) {\n    return false;\n  }\n\n  if (min && newDate < min) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isInputValid(\n  hours: string,\n  minutes = '0',\n  seconds = '0',\n  isPM: boolean\n): boolean {\n  return isHourInputValid(hours, isPM)\n    && isMinuteInputValid(minutes)\n    && isSecondInputValid(seconds);\n}\n","import { changeTime } from './timepicker.utils';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\n\nexport function canChangeValue(\n  state: TimepickerComponentState,\n  event?: TimeChangeEvent\n): boolean {\n  if (state.readonlyInput || state.disabled) {\n    return false;\n  }\n\n  if (event) {\n    if (event.source === 'wheel' && !state.mousewheel) {\n      return false;\n    }\n\n    if (event.source === 'key' && !state.arrowkeys) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function canChangeHours(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementHours) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementHours) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeMinutes(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementMinutes) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementMinutes) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeSeconds(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementSeconds) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementSeconds) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function getControlsValue(\n  state: TimepickerComponentState\n): TimepickerComponentState {\n  const {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  } = state;\n\n  return {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  };\n}\n\nexport function timepickerControls(\n  value: Date,\n  state: TimepickerComponentState\n): TimepickerControls {\n  const hoursPerDay = 24;\n  const hoursPerDayHalf = 12;\n  const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n  const res: TimepickerControls = {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n\n    canToggleMeridian: true\n  };\n\n  if (!value) {\n    return res;\n  }\n\n  // compare dates\n  if (max) {\n    const _newHour = changeTime(value, { hour: hourStep });\n    res.canIncrementHours = max > _newHour && (value.getHours() + hourStep) < hoursPerDay;\n\n    if (!res.canIncrementHours) {\n      const _newMinutes = changeTime(value, { minute: minuteStep });\n      res.canIncrementMinutes = showSeconds\n        ? max > _newMinutes\n        : max >= _newMinutes;\n    }\n\n    if (!res.canIncrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: secondsStep });\n      res.canIncrementSeconds = max >= _newSeconds;\n    }\n\n    if (value.getHours() < hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, { hour: hoursPerDayHalf }) < max;\n    }\n  }\n\n  if (min) {\n    const _newHour = changeTime(value, { hour: -hourStep });\n    res.canDecrementHours = min < _newHour;\n\n    if (!res.canDecrementHours) {\n      const _newMinutes = changeTime(value, { minute: -minuteStep });\n      res.canDecrementMinutes = showSeconds\n        ? min < _newMinutes\n        : min <= _newMinutes;\n    }\n\n    if (!res.canDecrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: -secondsStep });\n      res.canDecrementSeconds = min <= _newSeconds;\n    }\n\n    if (value.getHours() >= hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, { hour: -hoursPerDayHalf }) > min;\n    }\n  }\n\n  return res;\n}\n","import { Injectable } from '@angular/core';\n\n/** Provides default configuration values for timepicker */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimepickerConfig {\n  /** hours change step */\n  hourStep = 1;\n  /** minutes change step */\n  minuteStep = 5;\n  /** seconds changes step */\n  secondsStep = 10;\n  /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n  showMeridian = true;\n  /** meridian labels based on locale */\n  meridians = ['AM', 'PM'];\n  /** if true hours and minutes fields will be readonly */\n  readonlyInput = false;\n  /** if true hours and minutes fields will be disabled */\n  disabled = false;\n  /** if true scroll inside hours and minutes inputs will change time */\n  mousewheel = true;\n  /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n  arrowkeys = true;\n  /** if true spinner arrows above and below the inputs will be shown */\n  showSpinners = true;\n  /** show seconds in timepicker */\n  showSeconds = false;\n  /** show minutes in timepicker */\n  showMinutes = true;\n  /** minimum time user can select */\n  min: Date;\n  /** maximum time user can select */\n  max: Date;\n  /** placeholder for hours field in timepicker */\n  hoursPlaceholder = 'HH';\n  /** placeholder for minutes field in timepicker */\n  minutesPlaceholder = 'MM';\n  /** placeholder for seconds field in timepicker */\n  secondsPlaceholder = 'SS';\n  /** hours aria label */\n  ariaLabelHours = 'hours';\n  /** minutes aria label */\n  ariaLabelMinutes = 'minutes';\n  /** seconds aria label */\n  ariaLabelSeconds = 'seconds';\n}\n","import { Action } from 'ngx-bootstrap/mini-ngrx';\nimport {\n  canChangeHours,\n  canChangeMinutes,\n  canChangeSeconds,\n  canChangeValue,\n  timepickerControls\n} from '../timepicker-controls.util';\nimport { TimepickerConfig } from '../timepicker.config';\nimport {\n  TimepickerComponentState,\n  TimepickerControls\n} from '../timepicker.models';\nimport { changeTime, setTime, isValidLimit } from '../timepicker.utils';\nimport { TimepickerActions } from './timepicker.actions';\n\nexport class TimepickerState {\n  value: Date;\n  config: TimepickerComponentState;\n  controls: TimepickerControls;\n}\n\nexport const initialState: TimepickerState = {\n  value: null,\n  config: new TimepickerConfig(),\n  controls: {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n\n    canToggleMeridian: true\n  }\n};\n\n// tslint:disable-next-line:cyclomatic-complexity\nexport function timepickerReducer(state = initialState, action: Action) {\n  switch (action.type) {\n    case TimepickerActions.WRITE_VALUE: {\n      return Object.assign({}, state, { value: action.payload });\n    }\n\n    case TimepickerActions.CHANGE_HOURS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeHours(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { hour: action.payload.step });\n\n      if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n      }\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_MINUTES: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeMinutes(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { minute: action.payload.step });\n\n      if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n        return state;\n      }\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_SECONDS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeSeconds(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, {\n        seconds: action.payload.step\n      });\n\n      if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n        return state;\n      }\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.SET_TIME_UNIT: {\n      if (!canChangeValue(state.config)) {\n        return state;\n      }\n\n      const _newTime = setTime(state.value, action.payload);\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.UPDATE_CONTROLS: {\n      const _newControlsState = timepickerControls(state.value, action.payload);\n      const _newState: TimepickerState = {\n        value: state.value,\n        config: action.payload,\n        controls: _newControlsState\n      };\n\n      if (state.config.showMeridian !== _newState.config.showMeridian) {\n        if (state.value) {\n          _newState.value = new Date(state.value);\n        }\n      }\n\n      return Object.assign({}, state, _newState);\n    }\n\n    default:\n      return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  timepickerReducer,\n  TimepickerState,\n  initialState\n} from './timepicker.reducer';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Action, MiniStore, MiniState } from 'ngx-bootstrap/mini-ngrx';\n\n@Injectable()\nexport class TimepickerStore extends MiniStore<TimepickerState> {\n  constructor() {\n    const _dispatcher = new BehaviorSubject<Action>({\n      type: '[mini-ngrx] dispatcher init'\n    });\n    const state = new MiniState<TimepickerState>(\n      initialState,\n      _dispatcher,\n      timepickerReducer\n    );\n    super(_dispatcher, timepickerReducer, state);\n  }\n}\n","/* tslint:disable:no-forward-ref max-file-line-count */\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges, ViewEncapsulation\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerStore } from './reducer/timepicker.store';\nimport { getControlsValue } from './timepicker-controls.util';\nimport { TimepickerConfig } from './timepicker.config';\n\nimport {\n  TimeChangeSource,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\n\nimport {\n  isValidDate,\n  padNumber,\n  parseTime,\n  isInputValid,\n  isHourInputValid,\n  isMinuteInputValid,\n  isSecondInputValid,\n  isInputLimitValid\n} from './timepicker.utils';\n\nimport { Subscription } from 'rxjs';\n\nimport { ControlValueAccessorModel } from './models';\n\nexport const TIMEPICKER_CONTROL_VALUE_ACCESSOR: ControlValueAccessorModel = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => TimepickerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'timepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore],\n  templateUrl: './timepicker.component.html',\n  styles: [`\n    .bs-chevron {\n      border-style: solid;\n      display: block;\n      width: 9px;\n      height: 9px;\n      position: relative;\n      border-width: 3px 0px 0 3px;\n    }\n\n    .bs-chevron-up {\n      -webkit-transform: rotate(45deg);\n      transform: rotate(45deg);\n      top: 2px;\n    }\n\n    .bs-chevron-down {\n      -webkit-transform: rotate(-135deg);\n      transform: rotate(-135deg);\n      top: -2px;\n    }\n\n    .bs-timepicker-field {\n      width: 50px;\n      padding: .375rem .55rem;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TimepickerComponent\n  implements ControlValueAccessor,\n    TimepickerComponentState,\n    TimepickerControls,\n    OnChanges,\n    OnDestroy {\n  /** hours change step */\n  @Input() hourStep: number;\n  /** minutes change step */\n  @Input() minuteStep: number;\n  /** seconds change step */\n  @Input() secondsStep: number;\n  /** if true hours and minutes fields will be readonly */\n  @Input() readonlyInput: boolean;\n  /** if true hours and minutes fields will be disabled */\n  @Input() disabled: boolean;\n  /** if true scroll inside hours and minutes inputs will change time */\n  @Input() mousewheel: boolean;\n  /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n  @Input() arrowkeys: boolean;\n  /** if true spinner arrows above and below the inputs will be shown */\n  @Input() showSpinners: boolean;\n  /** if true meridian button will be shown */\n  @Input() showMeridian: boolean;\n  /** show minutes in timepicker */\n  @Input() showMinutes: boolean;\n  /** show seconds in timepicker */\n  @Input() showSeconds: boolean;\n  /** meridian labels based on locale */\n  @Input() meridians: string[];\n  /** minimum time user can select */\n  @Input() min: Date;\n  /** maximum time user can select */\n  @Input() max: Date;\n  /** placeholder for hours field in timepicker */\n  @Input() hoursPlaceholder: string;\n  /** placeholder for minutes field in timepicker */\n  @Input() minutesPlaceholder: string;\n  /** placeholder for seconds field in timepicker */\n  @Input() secondsPlaceholder: string;\n\n  /** emits true if value is a valid date */\n  @Output() isValid = new EventEmitter<boolean>();\n\n  // ui variables\n  hours: string;\n  minutes: string;\n  seconds: string;\n  meridian: string;\n\n  /** @deprecated - please use `isEditable` instead */\n  get isSpinnersVisible(): boolean {\n    return this.showSpinners && !this.readonlyInput;\n  }\n\n  get isEditable(): boolean {\n    return !(this.readonlyInput || this.disabled);\n  }\n\n  // min\\max validation for input fields\n  invalidHours = false;\n  invalidMinutes = false;\n  invalidSeconds = false;\n\n  // aria-label variables\n  labelHours: string;\n  labelMinutes: string;\n  labelSeconds: string;\n\n  // time picker controls state\n  canIncrementHours: boolean;\n  canIncrementMinutes: boolean;\n  canIncrementSeconds: boolean;\n\n  canDecrementHours: boolean;\n  canDecrementMinutes: boolean;\n  canDecrementSeconds: boolean;\n\n  canToggleMeridian: boolean;\n\n  // control value accessor methods\n  // tslint:disable-next-line:no-any\n  onChange = Function.prototype;\n  // tslint:disable-next-line:no-any\n  onTouched = Function.prototype;\n\n  timepickerSub: Subscription;\n\n  constructor(\n    _config: TimepickerConfig,\n    private _cd: ChangeDetectorRef,\n    private _store: TimepickerStore,\n    private _timepickerActions: TimepickerActions\n  ) {\n    Object.assign(this, _config);\n\n    this.timepickerSub = _store\n      .select(state => state.value)\n      .subscribe((value: Date) => {\n        // update UI values if date changed\n        this._renderTime(value);\n        this.onChange(value);\n\n        this._store.dispatch(\n          this._timepickerActions.updateControls(getControlsValue(this))\n        );\n      });\n\n    _store\n      .select(state => state.controls)\n      .subscribe((controlsState: TimepickerControls) => {\n        this.isValid.emit(isInputValid(this.hours, this.minutes, this.seconds, this.isPM()));\n        Object.assign(this, controlsState);\n        _cd.markForCheck();\n      });\n  }\n\n  resetValidation(): void {\n    this.invalidHours = false;\n    this.invalidMinutes = false;\n    this.invalidSeconds = false;\n  }\n\n  isPM(): boolean {\n    return this.showMeridian && this.meridian === this.meridians[1];\n  }\n\n  prevDef($event: Event) {\n    $event.preventDefault();\n  }\n\n  wheelSign($event: WheelEventInit): number {\n    return Math.sign($event.deltaY) * -1;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this._store.dispatch(\n      this._timepickerActions.updateControls(getControlsValue(this))\n    );\n  }\n\n  changeHours(step: number, source: TimeChangeSource = ''): void {\n    this.resetValidation();\n    this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n  }\n\n  changeMinutes(step: number, source: TimeChangeSource = ''): void {\n    this.resetValidation();\n    this._store.dispatch(\n      this._timepickerActions.changeMinutes({ step, source })\n    );\n  }\n\n  changeSeconds(step: number, source: TimeChangeSource = ''): void {\n    this.resetValidation();\n    this._store.dispatch(\n      this._timepickerActions.changeSeconds({ step, source })\n    );\n  }\n\n  updateHours(hours: string): void {\n    this.resetValidation();\n    this.hours = hours;\n\n    const isValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n\n    if (!isValid) {\n      this.invalidHours = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n\n    this._updateTime();\n  }\n\n  updateMinutes(minutes: string) {\n    this.resetValidation();\n    this.minutes = minutes;\n\n    const isValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n\n    if (!isValid) {\n      this.invalidMinutes = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n\n    this._updateTime();\n  }\n\n  updateSeconds(seconds: string) {\n    this.resetValidation();\n    this.seconds = seconds;\n\n    const isValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n\n    if (!isValid) {\n      this.invalidSeconds = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n\n    this._updateTime();\n  }\n\n  isValidLimit(): boolean {\n    return isInputLimitValid({\n      hour: this.hours,\n      minute: this.minutes,\n      seconds: this.seconds,\n      isPM: this.isPM()\n    }, this.max, this.min);\n  }\n\n  _updateTime() {\n    const _seconds = this.showSeconds ? this.seconds : void 0;\n    const _minutes = this.showMinutes ? this.minutes : void 0;\n    if (!isInputValid(this.hours, _minutes, _seconds, this.isPM())) {\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n\n    this._store.dispatch(\n      this._timepickerActions.setTime({\n        hour: this.hours,\n        minute: this.minutes,\n        seconds: this.seconds,\n        isPM: this.isPM()\n      })\n    );\n  }\n\n  toggleMeridian(): void {\n    if (!this.showMeridian || !this.isEditable) {\n      return;\n    }\n\n    const _hoursPerDayHalf = 12;\n    this._store.dispatch(\n      this._timepickerActions.changeHours({\n        step: _hoursPerDayHalf,\n        source: ''\n      })\n    );\n  }\n\n  /**\n   * Write a new value to the element.\n   */\n  writeValue(obj: string | null | undefined | Date): void {\n    if (isValidDate(obj)) {\n      this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n    } else if (obj == null) {\n      this._store.dispatch(this._timepickerActions.writeValue(null));\n    }\n  }\n\n  /**\n   * Set the function to be called when the control receives a change event.\n   */\n  // tslint:disable-next-line:no-any\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Set the function to be called when the control receives a touch event.\n   */\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * This function is called when the control status changes to or from \"disabled\".\n   * Depending on the value, it will enable or disable the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._cd.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this.timepickerSub.unsubscribe();\n  }\n\n  private _renderTime(value: string | Date): void {\n    if (!isValidDate(value)) {\n      this.hours = '';\n      this.minutes = '';\n      this.seconds = '';\n      this.meridian = this.meridians[0];\n\n      return;\n    }\n\n    const _value = parseTime(value);\n    const _hoursPerDayHalf = 12;\n    let _hours = _value.getHours();\n\n    if (this.showMeridian) {\n      this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n      _hours = _hours % _hoursPerDayHalf;\n      // should be 12 PM, not 00 PM\n      if (_hours === 0) {\n        _hours = _hoursPerDayHalf;\n      }\n    }\n\n    this.hours = padNumber(_hours);\n    this.minutes = padNumber(_value.getMinutes());\n    this.seconds = padNumber(_value.getUTCSeconds());\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TimepickerComponent } from './timepicker.component';\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerStore } from './reducer/timepicker.store';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TimepickerComponent],\n  exports: [TimepickerComponent]\n})\nexport class TimepickerModule {\n  static forRoot(): ModuleWithProviders<TimepickerModule> {\n    return {\n      ngModule: TimepickerModule,\n      providers: [TimepickerActions, TimepickerStore]\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}